name: Validate Home Assistant Configuration

on:
  push:
    branches: [ main ]
    paths:
      - '**.yaml'
      - '.github/workflows/validate.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - '**.yaml'
      - '.github/workflows/validate.yaml'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  yaml_lint:
    name: YAML Linting
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Validate YAML syntax
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: .
          config_file: .github/yamllint-config.yaml
          strict: false

  ha_config_check:
    name: Home Assistant Config Check
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Prepare environment
        run: |
          mkdir -p secrets
          # Create dummy files for secrets referenced in config
          echo '{"type": "service_account", "project_id": "dummy-project-id"}' > SERVICE_ACCOUNT.json
          
          # Create dummy secrets.yaml if used in your configuration
          echo 'dummy_secret: dummy_value' > secrets.yaml

      - name: Run Home Assistant Config Check
        uses: frenck/action-home-assistant@v1
        with:
          secrets: secrets.yaml
          version: "stable"

  notify_results:
    name: Notify Results
    needs: [yaml_lint, ha_config_check]
    runs-on: ubuntu-latest
    if: always() && github.event_name == 'pull_request'
    steps:
      - name: Check outcome
        id: check
        run: |
          if [[ "${{ needs.yaml_lint.result }}" == "success" && "${{ needs.ha_config_check.result }}" == "success" ]]; then
            echo "status=success" >> $GITHUB_OUTPUT
          else
            echo "status=failure" >> $GITHUB_OUTPUT
          fi

      - name: Create success comment on PR
        if: steps.check.outputs.status == 'success'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: '✅ Home Assistant configuration validation passed!'
            })

      - name: Create failure comment on PR
        if: steps.check.outputs.status == 'failure'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: '❌ Home Assistant configuration validation failed. Please check the workflow logs for details.'
            })
