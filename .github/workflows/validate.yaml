name: Validate Home Assistant Configuration

on:
  push:
    branches: [ main ]
    paths:
      - '**.yaml'
      - '.github/workflows/validate.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - '**.yaml'
      - '.github/workflows/validate.yaml'
  # Allow manual triggering
  workflow_dispatch:

jobs:
  yaml_lint:
    name: YAML Linting
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Validate YAML syntax
        uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: .
          config_file: .github/yamllint-config.yaml
          strict: false

  ha_config_check:
    name: Home Assistant Config Check
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Prepare test environment
        run: |
          # Create dummy files for secrets referenced in config
          echo '{"type": "service_account", "project_id": "dummy-project-id"}' > SERVICE_ACCOUNT.json
          
          # Create dummy secrets.yaml if needed
          if [ ! -f "secrets.yaml" ]; then
            echo 'dummy_secret: dummy_value' > secrets.yaml
          fi
          
          # Create needed directories that might be missing
          mkdir -p .storage

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Home Assistant CLI
        run: |
          python -m pip install --upgrade pip
          pip install homeassistant
          
      - name: Run config check and capture results
        id: check_config
        continue-on-error: true
        run: |
          # Capture the output
          OUTPUT=$(hass --script check_config --config . 2>&1)
          echo "$OUTPUT"
          
          # Check if there are actual validation errors vs. just missing files
          if echo "$OUTPUT" | grep -q "Invalid config"; then
            echo "CONFIG_VALID=false" >> $GITHUB_ENV
            echo "CONFIG_ISSUES=true" >> $GITHUB_ENV
          elif echo "$OUTPUT" | grep -q "Failed config"; then
            # Check if failures are only related to missing files (expected)
            if echo "$OUTPUT" | grep -q "Unable to read file"; then
              echo "CONFIG_VALID=true" >> $GITHUB_ENV
              echo "CONFIG_MISSING_FILES=true" >> $GITHUB_ENV
            else
              echo "CONFIG_VALID=false" >> $GITHUB_ENV
              echo "CONFIG_ISSUES=true" >> $GITHUB_ENV
            fi
          else
            echo "CONFIG_VALID=true" >> $GITHUB_ENV
          fi
      
      - name: Summarize config check
        run: |
          if [ "$CONFIG_VALID" = "true" ]; then
            echo "✅ Configuration syntax is valid"
            if [ "$CONFIG_MISSING_FILES" = "true" ]; then
              echo "⚠️ Note: Some files are missing but this is expected in CI"
            fi
            exit 0
          else
            echo "❌ Configuration has validation issues"
            exit 1
          fi

  notify_pr:
    name: Notify PR
    if: github.event_name == 'pull_request'
    needs: [yaml_lint, ha_config_check]
    runs-on: ubuntu-latest
    steps:
      - name: Create PR comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const yaml_result = "${{ needs.yaml_lint.result }}";
            const ha_result = "${{ needs.ha_config_check.result }}";
            
            let status, message, details = [];
            
            if (yaml_result === "success" && ha_result === "success") {
              status = "✅ **Home Assistant configuration validation passed!**";
              message = "All checks completed successfully.";
            } else {
              status = "❌ **Home Assistant configuration validation failed**";
              message = "Some checks did not pass:";
              
              if (yaml_result !== "success") {
                details.push("- YAML linting found syntax issues");
              }
              
              if (ha_result !== "success") {
                details.push("- Home Assistant configuration check found validation errors");
              }
              
              details.push("\nPlease check the [workflow run](${context.payload.repository.html_url}/actions/runs/${context.runId}) for details.");
            }
            
            const body = `${status}\n\n${message}\n\n${details.join("\n")}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.name,
              body: body
            });
