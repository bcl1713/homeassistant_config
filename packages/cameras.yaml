# packages/cameras.yaml
automation:
  # - id: "camera_notifications"
  #   alias: "Universal Camera Person Detection"
  #   description: "Unified notifications for all cameras detecting people"
  #   trigger:
  #     - platform: state
  #       entity_id:
  #         - binary_sensor.front_drive_person_occupancy
  #         - binary_sensor.back_door_person_occupancy
  #         - binary_sensor.front_doorbell_person_occupancy
  #       to: "on"
  #   condition:
  #     - condition: state
  #       entity_id: input_boolean.camera_notifications
  #       state: "on"
  #   action:
  #     - variables:
  #         camera_map:
  #           binary_sensor.front_drive_person_occupancy:
  #             camera: camera.front_drive
  #             name: "Front Drive"
  #           binary_sensor.back_door_person_occupancy:
  #             camera: camera.back_door
  #             name: "Back Door"
  #           binary_sensor.front_doorbell_person_occupancy:
  #             camera: camera.front_doorbell
  #             name: "Front Doorbell"
  #     - service: notify.all_mobile_devices
  #       data:
  #         message: "Person detected at {{ camera_map[trigger.entity_id].name }}"
  #         data:
  #           url: >-
  #             https://home.hblucas.org/api/camera_proxy_stream/{{ camera_map[trigger.entity_id].camera }}?token={{state_attr(camera_map[trigger.entity_id].camera, 'access_token')}}
  #           actions:
  #             - action: "view_stream"
  #               title: "View Stream"
  #           priority: "high"
  #           ttl: 0

  - id: "camera_notifications_new"
    alias: "Universal Camera Notification"
    description: "Notify tracked objects"
    trigger:
      platform: mqtt
      topic: frigate/reviews
    condition:
      - condition: state
        entity_id: input_boolean.camera_notifications
        state: "on"
    action:
      - variables:
          base_url: "https://home.hblucas.org/api/frigate/notifications/"
          event: "{{ trigger.payload_json }}"
          detections: "{{ event['after']['data']['detections'] }}"
          review_id: "{{event['after']['id']}}"
          id: "{{ detections[0] }}"
          objects: "{{ event['after']['data']['objects'] }}"
          sub_labels: "{{ event['after']['data']['sub_labels'] }}"
          label: "{{ objects | list | join(', ') | title }}"
          camera: "{{ event['after']['camera'] }}"
          camera_name: "{{ camera | replace('_', ' ') | title}}"
          start_time: "{{ event['after']['start_time'] | int }}"
      - service: notify.all_mobile_devices
        data:
          title: "{{ camera_name }}"
          message: "A {{label}} was detected on {{camera_name}}."
          data:
            clickAction: "{{base_url}}{{id}}/{{camera}}/clip.mp4"
            image: "{{base_url}}{{id}}/thumbnail.jpg?format=android"
            tag: "{{id}}"
            when: "{{start_time}}"
            priority: "high"
            ttl: 0
      - service: logbook.log
        data:
          name: "{{ camera_name }}"
          message: "{{ event }} and video url is {{base_url}}{{id}}/{{camera}}/clip.mp4"
  # Special case for doorbell button press
  - alias: "Doorbell Button Press"
    trigger:
      - platform: state
        entity_id: binary_sensor.front_doorbell_button_pressed
        to: "on"
    action:
      - service: notify.all_mobile_devices
        data:
          message: "Doorbell pressed"
          critical: true
