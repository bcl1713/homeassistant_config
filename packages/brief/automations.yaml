# automations.yaml
automation:
  - alias: "Morning Brief Trigger"
    description: "Triggers brief in the morning on weekdays"
    trigger:
      - platform: time
        at: "06:45:00"
    condition:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
    action:
      - service: script.turn_on
        target:
          entity_id: script.daily_brief

  - alias: "Evening Brief Trigger"
    description: "Triggers brief in the evening"
    trigger:
      - platform: time
        at: "17:30:00"
    action:
      - service: script.turn_on
        target:
          entity_id: script.daily_brief

  - alias: "Calendar Update Brief Trigger"
    description: "Triggers brief when new events are about to start"
    trigger:
      platform: event
      event_type: calendar_event_start
      event_data: {}
    condition:
      - condition: template
        value_template: "{{ trigger.event.data.offset_reached == false }}"
      - condition: template
        value_template: "{{ trigger.event.data.offset == 1800 }}"
    action:
      - service: script.turn_on
        target:
          entity_id: script.daily_brief

  - alias: "Significant Changes Brief Trigger"
    description: "Triggers brief on significant changes"
    trigger:
      - platform: event
        event_type: state_changed
        event_data:
          domain: device_tracker
      - platform: state
        entity_id:
          - input_boolean.chore_dishwasher_completed
          - input_boolean.chore_bathroom_completed
        to: "on"
      - platform: state
        entity_id: weather.forecast_home
        attribute: weather_alert
    action:
      - service: script.turn_on
        target:
          entity_id: script.daily_brief

  - alias: "Handle Brief TTS Action"
    description: "Plays TTS on kitchen display when notification action is clicked"
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: PLAY_TTS
    action:
      - variables:
          full_brief: >
            {%- set ns = namespace(text=[]) -%}
            {%- for i in range(1, 9) -%}
              {%- set part = states('input_text.brief_detailed_' ~ i) | replace('#', '') | replace("*", '') | trim -%}
              {%- if part not in ['unknown', ''] -%}
                {%- set ns.text = ns.text + [part] -%}
              {%- endif -%}
            {%- endfor -%}
            {{ ns.text | join('') }}
      - service: tts.speak
        target:
          entity_id: tts.google_en_com
        data:
          cache: true
          media_player_entity_id: media_player.kitchen_display
          message: "{{ full_brief }}"

  - alias: "Handle Brief Email Action"
    description: "Sends detailed brief via email when requested"
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: EMAIL_BRIEF
    action:
      - service: notify.bcl1713_gmail_com
        data:
          target: "bcl1713@gmail.com"
          title: >
            {% set hour = now().hour %}
            {% if hour < 12 %}
              Morning Status Brief
            {% elif hour < 17 %}
              Afternoon Status Brief
            {% else %}
              Evening Status Brief
            {% endif %}
          message: "{{ state_attr('sensor.ai_brief', 'detailed_brief') }}"
